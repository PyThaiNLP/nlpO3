# Build wheels for many platforms
# see: https://github.com/pypa/cibuildwheel

name: Build wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        # python: [36, 37, 38, 39]
        python: [36]
        bitness: [32, 64]
        manylinux_image: [manylinux2010]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            bitness: 64
            platform_id: win_amd64
          - os: windows-latest
            bitness: 32
            platform_id: win32
          - os: ubuntu-latest
            bitness: 64
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            bitness: 32
            platform_id: manylinux_i686
          - os: macos-latest
            bitness: 64
            platform_id: macosx_x86_64
        exclude:
          - os: macos-latest
            bitness: 32
          # Remove manylinux1 from the windows and osx build matrix since
          # manylinux_image is not used for these platforms
          #- os: windows-latest
          #  manylinux_image: manylinux1
          #- os: macos-latest
          #  manylinux_image: manylinux1

    steps:
      - name: Checkout oxidized-thainlp
        uses: actions/checkout@v2

      # Used to host cibuildwheel
      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Upgrade Python pip
        run: |
          python -m pip install --upgrade pip

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Setup Python/Rust build env
        run: |
          python -m pip install --upgrade wheel setuptools setuptools-rust

#      - name: Setup cibuildwheel
#        run: python -m pip install cibuildwheel==2.0.0a2

      - name: Setup Rust dependencies
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0
        with:
          output-dir: wheelhouse
        env:
          SCCACHE_VERSION: 0.2.15
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ENVIRONMENT: PATH="$HOME/.cargo/bin:$PATH"
                            MACOSX_DEPLOYMENT_TARGET=10.13
          CIBW_ENVIRONMENT_WINDOWS: PATH="$HOME\.cargo\bin:$PATH"
          CIBW_ENVIRONMENT_MACOS: CC=/usr/bin/clang
                                  CXX=/usr/bin/clang++
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y
          CIBW_BEFORE_BUILD_WINDOWS: 'rustup default stable'
          CIBW_TEST_REQUIRES: pytest

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

#            pip install -U setuptools-rust &&
